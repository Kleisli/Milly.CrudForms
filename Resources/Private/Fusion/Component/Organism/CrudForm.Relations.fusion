prototype(Milly.Crudforms:Component.Relations) < prototype(Neos.Fusion:Component) {

    renderer = Neos.Fusion:Loop {
        items = ${configuration.relations}
        itemKey = "relationName"
        itemName = "relationConfig"

        itemRenderer = afx`
            <Neos.Fusion:Fragment @if={Milly.Reflection.isToOneRelation(object, relationName)}>
                <Milly.Crudforms:Component.Button.Show object={Object.get(object, relationName)} showLabel={true} />
            </Neos.Fusion:Fragment>

            <Neos.Fusion:Fragment @if={Milly.Reflection.isToManyRelation(props.object, relationName)}>
                <Milly.Crudforms:Component.IndexTable @context.crudFormsModelClass={Milly.Reflection.getTypeOfRelation(object, relationName)} objects={Object.get(object, relationName)} header={relationConfig.label}/>

                <p @if.condition={!Object.get(object, relationName)}>No {relationConfig.label} created yet.</p>
                <div class="neos-pull-right">
                    <Milly.Crudforms:Component.Button.New modelClassName={Milly.Reflection.getTypeOfRelation(object, relationName)} parent={object} showLabel={true}/>
                </div>
            </Neos.Fusion:Fragment>
        `
    }

    @process.debugDump = Neos.Fusion:DebugDump


}
