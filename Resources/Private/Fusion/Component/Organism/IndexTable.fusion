prototype(Milly.Crudforms:Component.IndexTable) < prototype(Neos.Fusion:Component) {

    header = ''
    showColumnHeaders = ${Milly.CrudForms.getConfigurationByClass(crudFormsModelClass, 'views.index.showColumnHeaders')}
    filterValues = ${[]}

    renderer = afx`
    <Neos.Fusion.Form:Form form.data.filter={props.filterValues} form.target.action="index" attributes.class={'filter'}>
        <table @if.condition={props.objects} class="neos-table">
            <tr @if={props.header}>
                <th colspan="100%">
                    {props.header}
                </th>
            </tr>

            <Milly.Crudforms:Component.TableHeaderRow @if={props.showColumnHeaders} />

            <Neos.Fusion:Loop items={props.objects} itemName="object">
                <tr>
                    <td>
                        <Milly.Crudforms:Component.Link.Show object={object} showClassLabel={false}/>
                    </td>

                    <Milly.Crudforms:Component.ObjectValues.IndexTableCells object={object} />

                    <td class="neos-action">
                        <div class="neos-pull-right">

                            <Milly.Crudforms:Component.Sorting object={object}/>
                            <Milly.Crudforms:Component.Button.Edit object={object}/>
                            <Milly.Crudforms:Component.Button.Delete object={object}/>
                        </div>
                    </td>
                </tr>
            </Neos.Fusion:Loop>
        </table>
    </Neos.Fusion.Form:Form>
        `
    renderer.@process.prependJs = Neos.Fusion:Join {
        value = ${value}
        js = "<script>
                selects = document.querySelectorAll('form.filter select, form.filter input');
                for (let i=0; i<selects.length; i++){
                    selects[i].addEventListener('change', function(){
                    this.closest('form').submit();
                    })
                }
            </script>"

    }
}
