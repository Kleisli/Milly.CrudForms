prototype(Milly.Crudforms:Component.IndexTable) < prototype(Neos.Fusion:Component) {

    header = ''
    view = 'index'
    filterValues = ${[]}


    renderer = afx`
        <table @if.condition={props.objects} class="neos-table">
            <tr @if={props.header}>
                <th colspan="100%">
                    {props.header}
                </th>
            </tr>

            <Milly.Crudforms:Component.IndexTableHeaderRow
                @context.configuration={Milly.CrudForms.getConfigurationByClass(crudFormsModelClass, null, props.view)}
                @if={Milly.CrudForms.getConfigurationByClass(crudFormsModelClass, 'views.'+props.view+'.showColumnHeaders', props.view)} />

            <Neos.Fusion:Loop items={props.objects} itemName="object">
                <tr>
                    <td>
                        <Milly.Crudforms:Component.ActionUi.Show object={object} showClassLabel={false}/>
                    </td>

                    <Milly.Crudforms:Component.PropertyValues.IndexTableCells
                        properties={Milly.CrudForms.getConfigurationByModel(object, 'properties', props.view)}
                        object={object}
                    />

                    <td class="neos-action">
                        <div class="neos-pull-right">

                            <Milly.Crudforms:Component.Sorting object={object}/>
                            <Milly.Crudforms:Component.ActionUi.Edit object={object}/>
                            <Milly.Crudforms:Component.ActionUi.Delete object={object}/>
                        </div>
                    </td>
                </tr>
            </Neos.Fusion:Loop>
            <tfoot>
            <tr>
                <td colspan="100%">

                </td>
            </tr>
            </tfoot>
        </table>
        `
    renderer.@process.prependJs = Neos.Fusion:Join {
        value = ${value}
        js = "<script>
                selects = document.querySelectorAll('select.filter, input.filter');
                for (let i=0; i<selects.length; i++){
                    selects[i].addEventListener('change', function(){
                        document.getElementById(this.getAttribute('form')).submit();
                    })
                }
            </script>"

    }
}
