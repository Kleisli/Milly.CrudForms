prototype(Milly.Crudforms:Component.IndexTable) < prototype(Neos.Fusion:Component) {

    header = ''
    view = 'index'
    filterValues = ${[]}
    readonly = false


    renderer = afx`
<<<<<<< HEAD
        <table class="neos-table">
            <thead>
                <tr @if={props.header}>
                    <th colspan="100%">
                        {props.header}
                    </th>
                </tr>

                <Milly.Crudforms:Component.IndexTableHeaderRow
                    @context.configuration={Milly.CrudForms.getConfigurationByClass(crudFormsModelClass, null, props.view)}
                    @if={Milly.CrudForms.getConfigurationByClass(crudFormsModelClass, 'views.'+props.view+'.showColumnHeaders', props.view)} />
            </thead>
            <tbody>
                <Neos.Fusion:Loop items={props.objects} itemName="object">
                    <tr>
                        <td>
                            <Milly.Crudforms:Component.ActionUi.Show object={object} showClassLabel={false}/>
                        </td>

                        <Milly.Crudforms:Component.PropertyValues.IndexTableCells
                            properties={Milly.CrudForms.getConfigurationByModel(object, 'properties', props.view)}
                            object={object}
                        />

                        <td class="neos-action">
                            <div class="neos-pull-right" @if={!props.readonly}>
                                <Milly.Crudforms:Component.Sorting object={object}/>
                                <Milly.Crudforms:Component.ActionUi.Edit object={object}/>
                                <Milly.Crudforms:Component.ActionUi.Delete object={object}/>
                            </div>
                        </td>
                    </tr>
                </Neos.Fusion:Loop>
            </tbody>
            <tfoot @if={!props.disablePagination}>
                <tr>
                    <th colspan="100%" class="neos-action">
                        <Milly.Crudforms:Component.Pagination currentPage={pagination.currentPage}
                                                              pageSize={pagination.pageSize}
                                                              lastPage={pagination.lastPage}
                                                              filterValues={props.filterValues} />
                    </th>
                </tr>
            </tfoot>
        </table>
        `
    renderer.@process.prependJs = Neos.Fusion:Join {
        value = ${value}
        js = "<script>
                filterFormElements = document.querySelectorAll('select.filter, input.filter');
                for (let i=0; i<filterFormElements.length; i++){
                    filterFormElements[i].style.display === 'none';
                    filterFormElements[i].addEventListener('change', function(){
                        document.getElementById(this.getAttribute('form')).submit();
                    })
                }

                filterButton = document.getElementById('toggle-filter');
                filterButton.addEventListener('click', function(){
                    filterFormElements = document.querySelectorAll('select.filter, input.filter');
                    for (let i=0; i<filterFormElements.length; i++){
                        if (filterFormElements[i].style.display == 'none') {
                            filterFormElements[i].style.display = 'block';
                            filterButton.classList.add('neos-active');
                        } else {
                            filterFormElements[i].style.display = 'none';
                            filterButton.classList.remove('neos-active');
                        }
                    }
                })
            </script>"

    }
}
