prototype(Milly.CrudUI:Component.PropertyDisplayer) < prototype(Neos.Fusion:Component) {

    @propTypes {
        propertyConfig = ${PropTypes.arrayOf(PropTypes.any)}
        propertyName = ${PropTypes.string}
        object = ${PropTypes.any}
    }

    propertyValue = ${Milly.Object.getProperty(object, propertyConfig.propertyPath ? propertyConfig.propertyPath : propertyConfig._propertyName)}

    renderer = Neos.Fusion:Case {
        customDisplayer {
            condition = ${propertyConfig.ui.displayer}
            type = ${propertyConfig.ui.displayer}
            element.@apply.props = ${props}
        }
        default {
            condition = true
            renderer = Neos.Fusion:Match {

                @subject = ${propertyConfig.type}

                select = Milly.CrudUI:Component.PropertyDisplayer.Select
                multiSelect = Milly.CrudUI:Component.PropertyDisplayer.MultiSelect
                booleanRadio = Milly.CrudUI:Component.PropertyDisplayer.BooleanRadio
                booleanCheckbox = ${props.propertyValue ? 'Ja' : 'Nein'}
                dateTime = ${props.propertyValue ? Date.format(props.propertyValue, "d.m.Y H:i") : ''}
                date = ${props.propertyValue ? Date.format(props.propertyValue, "d.m.Y") : ''}
                dateInterval = Milly.CrudUI:Component.PropertyDisplayer.DateInterval
                image = Milly.CrudUI:Component.PropertyDisplayer.Image
                audio = Milly.CrudUI:Component.PropertyDisplayer.Audio {
                  resource = ${props.propertyValue}
                }
                email = Milly.CrudUI:Component.PropertyDisplayer.Email
                jsonList = Milly.CrudUI:Component.PropertyDisplayer.JsonList
                textarea = ${String.nl2br(props.propertyValue ? props.propertyValue : '')}

                @default = ${props.propertyValue != null ? props.propertyValue : ''}

            }
        }
    }
}
