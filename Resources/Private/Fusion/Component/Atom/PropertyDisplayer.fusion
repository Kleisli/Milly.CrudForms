prototype(Milly.CrudUI:Component.PropertyDisplayer) < prototype(Neos.Fusion:Component) {

    @propTypes {
        propertyConfig = ${PropTypes.arrayOf(PropTypes.any)}
        propertyName = ${PropTypes.string}
        object = ${PropTypes.any}
    }

    propertyValue = ${Milly.Object.getProperty(object, propertyConfig.propertyPath ? propertyConfig.propertyPath : propertyConfig._propertyName)}

    renderer = Neos.Fusion:Case {
        customDisplayer {
            condition = ${propertyConfig.ui.displayer}
            type = ${propertyConfig.ui.displayer}
            element.@apply.props = ${props}
        }
        propertyType {
            condition = ${propertyConfig.type}
            type = ${Configuration.setting('Milly.CrudUI.propertyTypes.' + propertyConfig.type + '.displayer')}
            element.@apply.props = ${props}
        }
        default {
            condition = true
            type = ${Configuration.setting('Milly.CrudUI.propertyTypes.default.displayer')}
            element.@apply.props = ${props}
        }
    }
}
