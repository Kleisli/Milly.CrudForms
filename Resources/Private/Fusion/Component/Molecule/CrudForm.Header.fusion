prototype(Milly.Crudforms:Component.Header) < prototype(Neos.Fusion:Component) {

    propertyName = ''
    propertyConfig = Neos.Fusion:DataStructure

    renderer =  Neos.Fusion:Match {

        @subject = ${Milly.CrudForms.getConfigurationByClass(crudFormsModelClass, 'views.index.filter.'+propertyName+'.type')}

        select = afx`
            <th>
                {propertyConfig.label ? propertyConfig.label : propertyName}<br/>
            <Neos.Fusion.Form:Select field.name={'filter['+propertyName+']'}>
                <Neos.Fusion.Form:Select.Option option.value='' attributes.selected={Profolio.App.Array.get(filterValues, propertyName) == ''}>
                    Alle
                </Neos.Fusion.Form:Select.Option>
                <Neos.Fusion:Loop items={Milly.CrudForms.getFieldOptions(propertyConfig.options)}>
                    <Neos.Fusion.Form:Select.Option option.value={itemKey} attributes.selected={Profolio.App.Array.get(filterValues, propertyName) == itemKey}>
                        {item}
                    </Neos.Fusion.Form:Select.Option>
                </Neos.Fusion:Loop>
                <Neos.Fusion.Form:Select.Option option.value='-' attributes.selected={Profolio.App.Array.get(filterValues, propertyName) == '-'}>
                    Leer
                </Neos.Fusion.Form:Select.Option>
            </Neos.Fusion.Form:Select>
        </th>
        `

        fulltext = afx`
            <th>
                {propertyConfig.label ? propertyConfig.label : propertyName}<br/>
                <Neos.Fusion.Form:Textfield field.name={'filter['+propertyName+']'} field.value={Profolio.App.Array.get(filterValues, propertyName)} attributes.placeholder="Suche..."/>
            </th>
        `

        @default = afx`
                <th>{propertyConfig.label ? propertyConfig.label : propertyName}</th>
            `

    }

}
