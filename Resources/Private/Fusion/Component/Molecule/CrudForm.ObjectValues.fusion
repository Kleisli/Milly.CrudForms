prototype(Milly.Crudforms:Component.ObjectValues) < prototype(Neos.Fusion:Component) {

    renderer = Neos.Fusion:Join {
        start = '<table class="neos-table show">'

        tableRows = Neos.Fusion:Loop {
            items = ${configuration.properties}
            itemKey = "propertyName"
            itemName = "propertyConfig"

            itemRenderer = Neos.Fusion:Case {
                textarea {
                    condition = ${propertyConfig.type == 'textarea'}
                    renderer = afx`
                    <tr>
                        <th>{propertyConfig.label ? propertyConfig.label : propertyName}</th>
                        <td>
                            {Object.get(props.object, propertyName)}
                        </td>
                    </tr>`
                }
                number {
                    condition = ${propertyConfig.type == 'number'}
                    renderer = afx`
                    <tr>
                        <th>{propertyConfig.label ? propertyConfig.label : propertyName}</th>
                        <td>
                            {Object.get(props.object, propertyName)}
                        </td>
                    </tr>
                    `
                }
                multiValue {
                    condition = ${propertyConfig.type == 'select' ||  propertyConfig.type == 'booleanRadio'}
                    renderer = afx`
                        <tr>
                            <th>{propertyConfig.label ? propertyConfig.label : propertyName}</th>
                            <td>
                                <Milly.Crudforms:Component.Link.Show @if={propertyConfig.link} object={Object.get(object, propertyName)} showClassLabel={false}/>
                                <Neos.Fusion:Fragment @if={!propertyConfig.link}>
                                    {Milly.CrudForms.getFieldOptionsObjectLabel(propertyConfig.options, Object.get(object, propertyName))}
                                </Neos.Fusion:Fragment>
                            </td>
                        </tr>
                    `
                }
                booleanCheckbox {
                    condition = ${ propertyConfig.type == 'booleanCheckbox'}
                    renderer = afx`
                        <tr>
                            <th>{propertyConfig.label ? propertyConfig.label : propertyName}</th>
                            <td>
                                {Object.get(object, propertyName) ? 'Ja' : 'Nein'}
                            </td>
                        </tr>
                    `
                }
                dateTime {
                    condition = ${ propertyConfig.type == 'dateTime'}
                    renderer = afx`
                        <tr>
                            <th>{propertyConfig.label ? propertyConfig.label : propertyName}</th>
                            <td>
                                {Date.format(Object.get(object, propertyName), "d.m.Y H:i")}
                            </td>
                        </tr>
                    `
                }
                date {
                    condition = ${ propertyConfig.type == 'date'}
                    renderer = afx`
                        <tr>
                            <th>{propertyConfig.label ? propertyConfig.label : propertyName}</th>
                            <td>
                                {Date.format(Object.get(object, propertyName), "d.m.Y")}
                            </td>
                        </tr>
                    `
                }
                default {
                    @position = 'end'
                    condition = true
                    renderer = afx`
                    <tr>
                        <th>{propertyConfig.label ? propertyConfig.label : propertyName}</th>
                        <td>
                            {Object.get(props.object, propertyName)}
                        </td>
                    </tr>
                    `
                }
            }
        }

        endTable = '</table>'
        button = afx`
            <div class="neos-pull-right">
                <Milly.Crudforms:Component.Button.Edit object={props.object} showLabel={true}/>
            </div>
        `
    }


}
